id: 2391ce61-8c8d-41ac-9723-d945b2e90720
name: Excessive Windows logon failures
description: |
  'User has over 50 Windows logon failures today and at least 33% of the count of logon failures over the previous 7 days.'
severity: Low
requiredDataConnectors:
  - connectorId: SecurityEvents
    dataTypes:
      - SecurityEvent
queryFrequency: 1d
queryPeriod: 8d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CredentialAccess
relevantTechniques:
  - T1110
query: |

  let starttime = 8d;
  let endtime = 1d;
  let threshold = 0.333;
  let countlimit = 50;
  SecurityEvent
  | where TimeGenerated >= ago(endtime)
  | where EventID == 4625 and AccountType =~ "User"
  | where IpAddress !in ("127.0.0.1", "::1")
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), CountToday = count() by EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress
  | join kind=leftouter (
      SecurityEvent 
      | where TimeGenerated between (ago(starttime) .. ago(endtime))
      | where EventID == 4625 and AccountType =~ "User"
      | where IpAddress !in ("127.0.0.1", "::1")
      | summarize CountPrev7day = count() by EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress
  ) on EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress
  | where CountToday >= coalesce(CountPrev7day,0)*threshold and CountToday >= countlimit
  | extend Reason = case(
  SubStatus == '0xc000005e', 'No logon servers available to service the logon request',
  SubStatus == '0xc0000062', 'Account name is not properly formatted',
  SubStatus == '0xc0000064', 'Account name does not exist',
  SubStatus == '0xc000006a', 'Incorrect password',    
  SubStatus == '0xc000006d', 'Bad user name or password',
  SubStatus == '0xc000006f', 'User logon blocked by account restriction',
  SubStatus == '0xc000006f', 'User logon outside of restricted logon hours',
  SubStatus == '0xc0000070', 'User logon blocked by workstation restriction',
  SubStatus == '0xc0000071', 'Password has expired',
  SubStatus == '0xc0000072', 'Account is disabled',
  SubStatus == '0xc0000133', 'Clocks between DC and other computer too far out of sync',
  SubStatus == '0xc000015b', 'The user has not been granted the requested logon right at this machine',
  SubStatus == '0xc0000193', 'Account has expirated',
  SubStatus == '0xc0000224', 'User is required to change password at next logon',
  SubStatus == '0xc0000234', 'Account is currently locked out',
  strcat('Unknown reason substatus: ', SubStatus))
  | extend WorkstationName = iff(WorkstationName == "-" or isempty(WorkstationName), Computer , WorkstationName) 
  | project StartTimeUtc, EndTimeUtc, EventID, Account, LogonTypeName, SubStatus, Reason, AccountType, Computer, WorkstationName, IpAddress, CountToday, CountPrev7day, Avg7Day = CountPrev7day/7
  | summarize StartTimeUtc = min(StartTimeUtc), EndTimeUtc = max(EndTimeUtc), Computer = make_set(Computer,128), IpAddressList = make_set(IpAddress,128), sum(CountToday), sum(CountPrev7day), avg(Avg7Day) 
  by EventID, Account, LogonTypeName, SubStatus, Reason, AccountType, WorkstationName
  | order by sum_CountToday desc nulls last 
  | extend timestamp = StartTimeUtc, AccountCustomEntity = Account, HostCustomEntity = WorkstationName
